package com.kpm.games.game5 {	import com.kpm.common.*;	import com.kpm.kpm.BubbleId;	import com.kpm.games.EGameCharacter;	import com.kpm.kpm.EBName;  	public class Game5Data extends GameData    {        public var piecePercentage          : Array = [0, 0.7,0.6,0.5,0.4,0.4,0.4];        public var numTotalNodes            : int = 0;        public var firstNumber              : int;        public var numPieces                : int = 0;        public var numAnswersToChoose        : Array = [0, 1,1,3,5];        public var numAdjacentWholes        : Array = [0, "CRESCENDO","DECRESCENDO",[2,4],[3,5]];	    public static const CARD_CRESCENDO 		: String = "CRESCENDO";        public static const CARD_DECRESCENDO 		: String = "DECRESCENDO";        public static const GAME_OBJ_PER_PLATFORM 		: int = 10;        public static const gameCharacterNames : Array = ["Frog,Bird,Bee,Mouse"]	    public static const PLATFORM_TOP           : Array = [150, 70];        public static const PLATFORM_SEPARATION    : Array = [180, 70];        public static const ANSWER_BOX_POSITION    : Array = [400,700];        public static const ANSWER_BOX_SIZE        : Array = [424,156];        public static const COUNTERS_HEIGHT : int = 155;        public function Game5Data(pBubble : BubbleId, pLanguage : ELanguage, pGame : Object, pChar : EGameCharacter){            super(pBubble, pLanguage, pGame);		    defineBubbleVars();		    soundLibrary.createLibrary(pLanguage, gameId, pChar, pBubble.Name);    }        //Actualiza variables para cada bubble usando el quality, Bubble.Name y Bubble.Level    private function defineBubbleVars(){        Util.debug("Game5.defineBubbleVars");        Util.debug("splitting parameters " + Bubble.Text.split("_")[0] + " " + Bubble.Text.split("_")[1] + " " + Bubble.Text.split("_")[2]);        super.updateGoal();		if(gameGoal.quality == EGoal.PLACE_NUMBER){        	//Bubble Vars for PlaceNumber bubbles            numTotalNodes = Bubble.Text.split("_")[1];            firstNumber = Bubble.Text.split("_")[2];            Util.printArray(["numTotalNodes: ", numTotalNodes, "firstNumber : ", firstNumber],  "G5Data.deifineGoal")			if(Bubble.Name.Text.indexOf("PlaceNumber") != -1){				switch(Bubble.Level){					case 1:						lvl_DifferentScales = false; //Same sizes						lvl_DifferentColors = false; //Same colors						break;					case 2:						lvl_DifferentScales = false; //Same sizes						lvl_DifferentColors = true;  //Different colors						break;                    case 3:						lvl_DifferentScales = true;   //Different sizes						lvl_DifferentColors = false;  //Same colors						break;                    case 4: case 5: case 6:						lvl_DifferentScales = true;   //Different sizes						lvl_DifferentColors = true;   //Different colors						break;				}			}		}	}		//$ update the variables that change per task.		public function updateTaskVars(){            Util.debug("Game5.updateTaskVars")			var i=0;						do			{				switch (gameGoal.quality)                {					case EGoal.PLACE_NUMBER: 	 CurrentGoal = generatePlaceNumberGoal(); break;				}				i++;			}			while (gameGoal.currentGoal == gameGoal.pastGoal && i < 10);						gameGoal.pastGoal = gameGoal.currentGoal;			//*starts a task/round			startTask(gameGoal.numOptions, gameGoal.numCorrectOptions);		}        public function generatePlaceNumberGoal() : Array        {           return new Array();        }		//Este método permite actualizar la meta. Tiene sentido para el caso de bubble ChangePlus al momento de llevar a cabo la segunda pregunta		public function updateCurrentGoal(newGoal : Number) {			gameGoal.currentGoal = newGoal;		}	}}